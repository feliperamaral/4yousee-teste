name: 4yousee-infra
services:
    4yousee-api:
        build:
            context: .
            dockerfile: Dockerfile
        image: 4yousee-api
        container_name: 4yousee-api
        hostname: 4yousee-api
        environment:
            APP_ENV: ${APP_ENV:-dev}
        ports:
            - "3001:80"

        healthcheck:
            test: "curl -f http://localhost/health"
            interval: 5s
            timeout: 30s
            retries: 5
            start_period: 40s
            start_interval: 5s
        volumes:
            - .:/home/www-data
        depends_on:
            4yousee-database:
                condition: service_healthy
            4yousee-storage-init:
                condition: service_completed_successfully
            4yousee-queue:
                condition: service_started
    4yousee-queue-consumer:
        image: 4yousee-api
        container_name: 4yousee-consumer
        hostname: 4yousee-consumer
        environment:
            APP_ENV: ${APP_ENV:-dev}
        command: /bin/bash /start/queue_consumer.sh
        restart: unless-stopped
        volumes:
            - .:/home/www-data
        depends_on:
            4yousee-api:
                condition: service_healthy
    4yousee-database:
        image: postgres:17.5-alpine
        container_name: 4yousee-database
        hostname: 4yousee-database
        ports:
            - "5433:5432"
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_HOST_AUTH_METHOD: trust
            POSTGRES_DB: ${POSTGRES_BD}
            POSTGRES_USER: ${POSTGRES_USER}
        healthcheck:
            test: "pg_isready -d ${POSTGRES_BD} -U ${POSTGRES_USER}"
            interval: 10s
            timeout: 60s
            retries: 5
            start_period: 80s
    4yousee-storage:
        image: minio/minio
        container_name: 4yousee-storage
        hostname: 4yousee-storage
        command: server /data
        environment:
            - MINIO_ROOT_USER=${AWS_SECRET_ACCESS_KEY:-root}
            - MINIO_ROOT_PASSWORD=${AWS_ACCESS_KEY_ID:-d163UML2Y1vP}
            - MINIO_CONSOLE_ADDRESS=:9001
        ports:
            - 9000:9000
            - 9001:9001
        healthcheck:
            test: curl -f http://localhost:9000/minio/health/live
            interval: 10s
            timeout: 5s
            retries: 3
    4yousee-storage-init:
        image: minio/mc
        container_name: 4yousee-storage-init
        depends_on:
            4yousee-storage:
                condition: service_healthy
        entrypoint: >
            /bin/bash -c "
                set -eu
                mc alias set local http://4yousee-storage:9000 ${AWS_SECRET_ACCESS_KEY:-root} ${AWS_ACCESS_KEY_ID:-d163UML2Y1vP}
                (mc mb local/videos || echo 'Bucket ja criado')
                (mc anonymous set download local/videos || echo 'Permissao ja configurada')
                echo 'Minio inicializado'
                exit 0
            "
    4yousee-queue:
        image: rabbitmq:4-management-alpine
        container_name: 4yousee-queue
        hostname: 4yousee-queue
        ports:
            - 9002:15672
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-mquser}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS:-am7kFaRTXA7SI8UP7w7f}
        healthcheck:
            test: rabbitmq-diagnostics -q check_running
            interval: 10s
            timeout: 5s
            retries: 3

networks:
  default:
    name: 4yousee-network
